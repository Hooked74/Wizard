{"version":3,"sources":["components/Wizard/Step.js","components/Wizard/StepConnector.js","components/Wizard/AdvancedStep.js","components/Wizard/Wizard.js","store/types.js","store/actions.js","containers/App.js","serviceWorker.js","store/reducers.js","index.js","store/index.js","store/base-state.js"],"names":["Button","styled","button","_templateObject","props","color","memo","_ref","label","index","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","data-label","data-index","ConnectorWrapper","div","StepConnector_templateObject","LeftConnector","_templateObject2","RightConnector","_templateObject3","ConnectorFiller","_templateObject4","active","StepConnector","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTransitionEnd","_this$props","activeColor","inactiveColor","state","rightConnectorColor","leftConnectorColor","setState","nextProps","prevState","nextPropsActive","_this$props2","_this$state","PureComponent","AdvancedStep","component","assertThisInitialized","activeConnector","stepColor","onTransitionStepEnd","onTransitionConnectorEnd","onClick","Fragment","StepConnector_StepConnector","Step","chunkState","objectSpread","Steps","Wizard_templateObject","Content","Wizard_templateObject2","Wizard","lockedClickOnStep","onClickStep","e","clickedStepIndex","parseInt","target","getAttribute","lastActiveStep","Math","abs","updateStep","length","steps","MAX_STEPS","console","warn","concat","MIN_STEPS","Error","_this2","slice","map","step","AdvancedStep_AdvancedStep","key","content","i","defaultProps","types","actions","data","type","Types","payload","App","className","Wizard_Wizard","connect","dispatcher","bindActionCreators","Boolean","window","location","hostname","match","reducers","defineProperty","action","_action$payload","render","es","store","baseState","initialState","middlewares","thunk","createStore","applyMiddleware","apply","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.115638de.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  flex-shrink: 0;\n  border: 10px solid ${props => props.color};\n  border-radius: 50px;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  position: relative;\n  z-index: 1;\n  transition: border-color 0.4s cubic-bezier(0.61, 0, 0.74, 0.05);\n  position: relative;\n  outline: none;\n  cursor: pointer;\n\n  ::before {\n    content: attr(data-label);\n    position: absolute;\n    top: -60px;\n    left: 50%;\n    white-space: nowrap;\n    font-size: 26px;\n    transform: translate(-50%);\n    color: ${props => props.color};\n    font-weight: 500;\n    transition: color 0.4s cubic-bezier(0.61, 0, 0.74, 0.05);\n  }\n`;\n\nexport default memo(({ label, index, ...rest }) => (\n  <Button data-label={label} data-index={index} {...rest} />\n));\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst ConnectorWrapper = styled.div`\n  background-color: ${props => props.color};\n  height: 10px;\n  width: 100%;\n  position: relative;\n`;\n\nconst LeftConnector = styled.div`\n  background-color: ${props => props.color};\n  width: 1px;\n  height: 10px;\n  position: absolute;\n  top: 0px;\n  left: -1px;\n`;\n\nconst RightConnector = styled.div`\n  background-color: ${props => props.color};\n  width: 1px;\n  height: 10px;\n  position: absolute;\n  top: 0px;\n  right: -1px;\n`;\n\nconst ConnectorFiller = styled.div`\n  width: ${props => (props.active ? \"100%\" : \"0\")};\n  height: 10px;\n  background-color: ${props => props.color};\n  transition: width 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n`;\n\nexport default class StepConnector extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool.isRequired,\n    activeColor: PropTypes.string.isRequired,\n    inactiveColor: PropTypes.string.isRequired,\n    onTransitionEnd: PropTypes.func\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { active: nextPropsActive, activeColor, inactiveColor } = nextProps;\n\n    if (nextPropsActive !== prevState.active) {\n      return {\n        active: nextPropsActive,\n        leftConnectorColor: activeColor,\n        rightConnectorColor: inactiveColor\n      };\n    }\n\n    return prevState;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const color = props.active ? props.activeColor : props.inactiveColor;\n\n    this.state = {\n      active: props.active,\n      leftConnectorColor: color,\n      rightConnectorColor: color\n    };\n  }\n\n  onTransitionEnd = () => {\n    const { activeColor, inactiveColor, active, onTransitionEnd } = this.props;\n    const state = active\n      ? { rightConnectorColor: activeColor }\n      : { leftConnectorColor: inactiveColor };\n\n    this.setState(state, () => {\n      if (onTransitionEnd) onTransitionEnd();\n    });\n  };\n\n  render() {\n    const { activeColor, inactiveColor, active } = this.props;\n    const { leftConnectorColor, rightConnectorColor } = this.state;\n\n    return (\n      <ConnectorWrapper color={inactiveColor}>\n        <LeftConnector color={leftConnectorColor} />\n        <ConnectorFiller\n          color={activeColor}\n          active={active}\n          onTransitionEnd={this.onTransitionEnd}\n        />\n        <RightConnector color={rightConnectorColor} />\n      </ConnectorWrapper>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Step from \"./Step\";\nimport StepConnector from \"./StepConnector\";\n\nexport default class AdvancedStep extends PureComponent {\n  static propTypes = {\n    index: PropTypes.number.isRequired,\n    active: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    activeColor: PropTypes.string.isRequired,\n    inactiveColor: PropTypes.string.isRequired,\n    onTransitionEnd: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { active: nextPropsActive, activeColor, inactiveColor } = nextProps;\n\n    if (nextPropsActive !== prevState.active) {\n      const chunkState = nextPropsActive\n        ? {\n            onTransitionStepEnd: nextProps.onTransitionEnd,\n            onTransitionConnectorEnd: () =>\n              prevState.component.setState({ stepColor: activeColor })\n          }\n        : {\n            onTransitionStepEnd: () =>\n              prevState.component.setState({ activeConnector: false }),\n            onTransitionConnectorEnd: nextProps.onTransitionEnd\n          };\n\n      return {\n        active: nextPropsActive,\n        activeConnector: true,\n        stepColor: inactiveColor,\n        ...chunkState\n      };\n    }\n\n    return prevState;\n  }\n\n  state = {\n    component: this, // readonly\n    active: this.props.active,\n    activeConnector: this.props.active,\n    stepColor: this.props.active\n      ? this.props.activeColor\n      : this.props.inactiveColor,\n    onTransitionStepEnd: void 0,\n    onTransitionConnectorEnd: void 0\n  };\n\n  render() {\n    const { index, label, activeColor, inactiveColor, onClick } = this.props;\n    const {\n      onTransitionStepEnd,\n      stepColor,\n      onTransitionConnectorEnd,\n      activeConnector\n    } = this.state;\n\n    return (\n      <>\n        <StepConnector\n          activeColor={activeColor}\n          inactiveColor={inactiveColor}\n          active={activeConnector}\n          onTransitionEnd={onTransitionConnectorEnd}\n        />\n        <Step\n          index={index}\n          label={label}\n          color={stepColor}\n          onClick={onClick}\n          onTransitionEnd={onTransitionStepEnd}\n        />\n      </>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Step from \"./Step\";\nimport AdvancedStep from \"./AdvancedStep\";\n\nconst Steps = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 50px;\n`;\n\nconst Content = styled.div`\n  padding-top: 15px;\n`;\n\nexport default class Wizard extends PureComponent {\n  static MAX_STEPS = 5;\n  static MIN_STEPS = 2;\n\n  static defaultProps = {\n    activeColor: \"#5111df\",\n    inactiveColor: \"#dbdbdb\"\n  };\n\n  static propTypes = {\n    steps: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        active: PropTypes.bool.isRequired\n      })\n    ).isRequired,\n    activeColor: PropTypes.string,\n    inactiveColor: PropTypes.string,\n    updateStep: PropTypes.func.isRequired\n  };\n\n  lockedClickOnStep = false;\n\n  constructor(props) {\n    super(props);\n\n    const { length } = props.steps;\n\n    if (length > Wizard.MAX_STEPS) {\n      console.warn(\n        `Step limit exceeded. Only ${Wizard.MAX_STEPS} steps will be rendered.`\n      );\n    } else if (length < Wizard.MIN_STEPS) {\n      throw new Error(\n        \"Сannot render component. Make sure the props is correctly.\"\n      );\n    }\n  }\n\n  get lastActiveStep() {\n    const { steps } = this.props;\n    let step;\n\n    for (let i = steps.length; i--; ) {\n      if (steps[i].active) {\n        step = { ...steps[i], index: i };\n        break;\n      }\n    }\n\n    if (!step) step = { ...steps[0], index: 0 };\n\n    return step;\n  }\n\n  onClickStep = e => {\n    const clickedStepIndex = parseInt(e.target.getAttribute(\"data-index\"), 10);\n    const lastActiveStep = this.lastActiveStep;\n\n    if (\n      !this.lockedClickOnStep &&\n      Math.abs(clickedStepIndex - lastActiveStep.index) === 1\n    ) {\n      const { updateStep } = this.props;\n      if (clickedStepIndex < lastActiveStep.index) {\n        updateStep({ active: false }, lastActiveStep.index);\n      } else {\n        updateStep({ active: true }, clickedStepIndex);\n      }\n      this.lockedClickOnStep = true;\n    }\n  };\n\n  onTransitionStepEnd = () => {\n    this.lockedClickOnStep = false;\n  };\n\n  render() {\n    const { steps, activeColor, inactiveColor } = this.props;\n\n    return (\n      <div>\n        <Steps>\n          <Step\n            label={steps[0].label}\n            color={activeColor}\n            index={0}\n            onClick={this.onClickStep}\n            onTransitionEnd={this.onTransitionStepEnd}\n          />\n          {steps.slice(1, Wizard.MAX_STEPS).map((step, index) => (\n            <AdvancedStep\n              key={index}\n              index={index + 1}\n              label={step.label}\n              active={step.active}\n              activeColor={activeColor}\n              inactiveColor={inactiveColor}\n              onClick={this.onClickStep}\n              onTransitionEnd={this.onTransitionStepEnd}\n            />\n          ))}\n        </Steps>\n        <Content>{this.lastActiveStep.content}</Content>\n      </div>\n    );\n  }\n}\n","export default {\n  UPDATE_STEP: \"UPDATE_STEP\"\n};\n","import { bindActionCreators } from \"redux\";\nimport Types from \"./types\";\n\nexport const actions = {\n  updateStep(data, index) {\n    return {\n      type: Types.UPDATE_STEP,\n      payload: { data, index }\n    };\n  }\n};\n\nexport default dispatcher => bindActionCreators(actions, dispatcher);\n","import React, { PureComponent } from \"react\";\nimport Wizard from \"../components/Wizard/Wizard\";\nimport { connect } from \"react-redux\";\nimport buildActions from \"../store/actions\";\n\nclass App extends PureComponent {\n  static propTypes = {\n    ...Wizard.propTypes // eslint-disable-line\n  };\n\n  render() {\n    const { steps, updateStep } = this.props;\n\n    return (\n      <div className=\"App\">\n        <Wizard steps={steps} updateStep={updateStep} />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    steps: state.steps\n  }),\n  buildActions\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Types from \"./types\";\n\nexport default {\n  [Types.UPDATE_STEP](state, action) {\n    const { index, data } = action.payload;\n    const step = {\n      ...state.steps[index],\n      ...data\n    };\n    const steps = state.steps.slice(0);\n\n    steps[index] = step;\n\n    return {\n      ...state,\n      steps\n    };\n  }\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport createStore from \"./store\";\nimport baseState from \"./store/base-state\";\n\nrender(\n  <Provider store={createStore(baseState)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nexport default baseState => {\n  const initialState = {\n    steps: [],\n    ...baseState\n  };\n\n  const reducer = (state, action) =>\n    reducers[action.type] ? reducers[action.type](state, action) : state;\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === \"development\") {\n    middlewares.push(\n      createLogger({\n        collapsed: true\n      })\n    );\n  }\n\n  return createStore(reducer, initialState, applyMiddleware(...middlewares));\n};\n","export default {\n  steps: [\n    {\n      active: true,\n      label: \"Design\",\n      content:\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquid soluta eum, possimus veniam reprehenderit ipsam laudantium voluptatibus debitis, deleniti doloribus illum iusto atque consequatur ullam sapiente adipisci officia blanditiis sint.\"\n    },\n    {\n      active: true,\n      label: \"Build\",\n      content:\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquid soluta eum, possimus veniam reprehenderit ipsam laudantium voluptatibus debitis, deleniti doloribus illum iusto atque consequatur ullam sapiente adipisci officia blanditiis sint. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquid soluta eum, possimus veniam reprehenderit ipsam laudantium voluptatibus debitis, deleniti doloribus illum iusto atque consequatur ullam sapiente adipisci officia blanditiis sint.\"\n    },\n    {\n      active: false,\n      label: \"Launch\",\n      content:\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquid soluta eum, possimus veniam reprehenderit ipsam laudantium voluptatibus debitis, deleniti doloribus illum iusto atque consequatur ullam sapiente adipisci officia blanditiis sint. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquid soluta eum, possimus veniam reprehenderit ipsam laudantium voluptatibus debitis, deleniti doloribus illum iusto atque consequatur ullam sapiente adipisci officia blanditiis sint. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquid soluta eum, possimus veniam reprehenderit ipsam laudantium voluptatibus debitis, deleniti doloribus illum iusto atque consequatur ullam sapiente adipisci officia blanditiis sint.\"\n    }\n  ]\n};\n"],"sourceRoot":""}